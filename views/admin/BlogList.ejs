<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Blog List</title>
    <link rel="stylesheet" href="/css/styles.css" />
  </head>
  <body>
    <%- include('../partials/header.ejs') %>

    <aside class="sidebar" id="sidebar">
      <ul class="sidebar-menu">
        <li><a href="/admin/add-blog">Add Blog</a></li>
        <li><a href="/admin/blog-list" class="active">Blog List</a></li>
        <li><a href="/admin/news-letter">Newsletter</a></li>
        <li><a href="/admin/subscribers">Subscribers</a></li>
      </ul>
      <div class="user-profile">
        <img src="/images/user-profile.png" alt="User Profile" />
        <p>Username</p>
      </div>
    </aside>

    <main class="blog-list">
      <h1>Blog List</h1>
      <div class="container" id="blog-container">
        <!-- Blog posts will be dynamically injected here -->
      </div>
    </main>

    <%- include('../partials/footer.ejs') %>

    <script>
      // Fetch blog data from the API and display it
      document.addEventListener("DOMContentLoaded", async () => {
        try {
          const response = await fetch(
            "https://kefita-tech-backend-1.onrender.com/admin/blog-list"
          );
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          const blogs = await response.json();
          const blogContainer = document.getElementById("blog-container");
          console.log(blogs);
          blogs.forEach((blog) => {
            const blogBox = document.createElement("div");
            blogBox.className = "latest-post";
            blogBox.innerHTML = `
              <div class="box">
                <img src="${blog.image}" alt="${blog.title} Image" />
                <div class="box-content">
                  <h3>${blog.title}</h3>
                  <p>${blog.content.slice(0, 50)}...</p>
                  <div class="item">
                    <p onclick="editBlog('${blog._id}')" class="icon">ðŸ–‰ Edit</p>
                    <button class="icon" onclick="deleteBlog('${
                      blog._id
                    }')">ðŸ—‘ Delete</button>
                  </div>
                </div>
              </div>
            `;
            blogContainer.appendChild(blogBox);
          });
        } catch (error) {
          console.error("Error fetching blog data:", error);
        }

        // Sidebar toggle script
        const sidebar = document.getElementById("sidebar");
        const closeBtn = document.getElementById("close-btn");
        const openBtn = document.getElementById("open-btn");

        if (closeBtn) {
          closeBtn.addEventListener("click", () => {
            sidebar.classList.remove("open");
            sidebar.classList.add("close");
          });
        }

        if (openBtn) {
          openBtn.addEventListener("click", () => {
            sidebar.classList.remove("close");
            sidebar.classList.add("open");
          });
        }
      });

      async function deleteBlog(blogId) {
        const confirmation = confirm(
          "Are you sure you want to delete this blog?"
        );
        if (confirmation) {
          try {
            const response = await fetch(
              `https://kefita-tech-backend-1.onrender.com/api/blogs/${blogId}`,
              {
                method: "DELETE",
              }
            );
            if (!response.ok) {
              throw new Error("Failed to delete the blog");
            }
            alert("Blog deleted successfully");
            location.reload(); // Reload the page to reflect changes
          } catch (error) {
            console.error("Error deleting blog:", error);
            alert("Error deleting blog");
          }
        }
      }

      function editBlog(blogID) {
        const confirmation = confirm(
          "Are you sure you want to edit this blog?"
        );
        if (confirmation) {
          // Find the container where the form will be displayed
          const blogContainer = document.getElementById("blog-container");

          // Clear the container before adding the edit form
          blogContainer.innerHTML = "";

          // Fetch the current blog data
          fetch(
            `https://kefita-tech-backend-1.onrender.com/api/blogs/${blogID}`
          )
            .then((response) => response.json())
            .then((blog) => {
              // Create the edit form
              const form = document.createElement("form");
              form.id = "edit-form";
              form.innerHTML = `
            <h3>Edit Blog: ${blog.title}</h3>
            <label for="title">Title</label>
            <input type="text" id="title" name="title" value="${blog.title}" />

            <label for="description">Description</label>
            <textarea id="description" name="description">${blog.description}</textarea>

            <label for="content">Content</label>
            <textarea id="content" name="content">${blog.content}</textarea>

            <label for="category">Category</label>
            <input type="text" id="category" name="category" value="${blog.category}" />

            <label for="image">Image (optional)</label>
            <input type="file" id="image" name="image" />

            <button type="submit">Save Changes</button>
          `;

              // Append the form to the container
              blogContainer.appendChild(form);

              // Add form submission logic
              form.addEventListener("submit", async (event) => {
                event.preventDefault(); // Prevent form from submitting the traditional way

                const formData = new FormData();
                formData.append(
                  "title",
                  document.getElementById("title").value
                );
                formData.append(
                  "description",
                  document.getElementById("description").value
                );
                formData.append(
                  "content",
                  document.getElementById("content").value
                );
                formData.append(
                  "category",
                  document.getElementById("category").value
                );

                const imageFile = document.getElementById("image").files[0];
                if (imageFile) {
                  formData.append("image", imageFile); // If a new image is selected, append it to form data
                }

                try {
                  const response = await fetch(
                    `https://kefita-tech-backend-1.onrender.com/api/blogs/${blogID}`,
                    {
                      method: "PUT",
                      body: formData,
                    }
                  );

                  if (response.ok) {
                    alert("Blog updated successfully!");
                    location.reload(); // Reload the page to reflect the updated blog post
                  } else {
                    alert("Failed to update the blog.");
                  }
                } catch (error) {
                  console.error("Error updating blog:", error);
                  alert("An error occurred while updating the blog.");
                }
              });
            })
            .catch((error) => {
              console.error("Error fetching blog data for editing:", error);
              alert("An error occurred while fetching the blog data.");
            });
        }
      }
    </script>
  </body>
</html>
